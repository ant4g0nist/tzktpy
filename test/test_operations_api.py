# coding: utf-8

"""
    TzKT API

    # Introduction  TzKT Explorer provides free REST API and WebSocket API for accessing detailed Tezos blockchain data and helps developers build more services and applications on top of Tezos. TzKT is an open-source project, so you can easily clone and build it and use it as a self-hosted service to avoid any risks of depending on third-party services.  TzKT API is available for the following Tezos networks with the following base URLs:  - Mainnet: `https://api.tzkt.io/` or `https://api.mainnet.tzkt.io/` ([view docs](https://api.tzkt.io))  - Hangzhounet: `https://api.hangzhounet.tzkt.io/` ([view docs](https://api.hangzhounet.tzkt.io)) - Ithacanet: `https://api.ithacanet.tzkt.io/` ([view docs](https://api.ithacanet.tzkt.io))  We also provide a staging environment for testing newest features and pre-updating client applications before deploying to production:  - Mainnet staging: `https://staging.api.tzkt.io/` or `https://staging.api.mainnet.tzkt.io/` ([view docs](https://staging.api.tzkt.io))  Feel free to contact us if you have any questions or feature requests. Your feedback really helps us make TzKT better!  - Discord: https://discord.gg/aG8XKuwsQd - Telegram: https://t.me/baking_bad_chat - Slack: https://tezos-dev.slack.com/archives/CV5NX7F2L - Twitter: https://twitter.com/TezosBakingBad - Email: hello@baking-bad.org  And don't forget to star TzKT project [on GitHub](https://github.com/baking-bad/tzkt) ;)  # Terms of Use  TzKT API is free for everyone and for both commercial and non-commercial usage.  If your application or service uses the TzKT API in any forms: directly on frontend or indirectly on backend, you must mention that fact on your website or application by placing the label **\"Powered by TzKT API\"** or **\"Built with TzKT API\"** with a direct link to [tzkt.io](https://tzkt.io).   # Rate Limits  There will be no rate limits as long as our servers can handle the load without additional infrastructure costs. However, any apparent abuse will be prevented by setting targeted rate limits.  Check out [Tezos Explorer API Best Practices](https://baking-bad.org/blog/tag/TzKT/) and in particular [how to optimize requests count](https://baking-bad.org/blog/2020/07/29/tezos-explorer-api-tzkt-how-often-to-make-requests/).  ---   # noqa: E501

    OpenAPI spec version: v1.8.3
    Contact: hello@baking-bad.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.tzktpy.operations_api import OperationsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestOperationsApi(unittest.TestCase):
    """OperationsApi unit test stubs"""

    def setUp(self):
        self.api = OperationsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_operations_get_activation_by_hash(self):
        """Test case for operations_get_activation_by_hash

        Get activation by hash  # noqa: E501
        """
        pass

    def test_operations_get_activations(self):
        """Test case for operations_get_activations

        Get activations  # noqa: E501
        """
        pass

    def test_operations_get_activations_count(self):
        """Test case for operations_get_activations_count

        Get activations count  # noqa: E501
        """
        pass

    def test_operations_get_baking(self):
        """Test case for operations_get_baking

        Get baking  # noqa: E501
        """
        pass

    def test_operations_get_baking_by_id(self):
        """Test case for operations_get_baking_by_id

        Get baking by id  # noqa: E501
        """
        pass

    def test_operations_get_baking_count(self):
        """Test case for operations_get_baking_count

        Get baking count  # noqa: E501
        """
        pass

    def test_operations_get_ballot_by_hash(self):
        """Test case for operations_get_ballot_by_hash

        Get ballot by hash  # noqa: E501
        """
        pass

    def test_operations_get_ballots(self):
        """Test case for operations_get_ballots

        Get ballots  # noqa: E501
        """
        pass

    def test_operations_get_ballots_count(self):
        """Test case for operations_get_ballots_count

        Get ballots count  # noqa: E501
        """
        pass

    def test_operations_get_by_hash(self):
        """Test case for operations_get_by_hash

        Get operations by hash  # noqa: E501
        """
        pass

    def test_operations_get_by_hash_counter(self):
        """Test case for operations_get_by_hash_counter

        Get operations by hash and counter  # noqa: E501
        """
        pass

    def test_operations_get_by_hash_counter_nonce(self):
        """Test case for operations_get_by_hash_counter_nonce

        Get operations by hash, counter and nonce  # noqa: E501
        """
        pass

    def test_operations_get_delegation_by_hash(self):
        """Test case for operations_get_delegation_by_hash

        Get delegation by hash  # noqa: E501
        """
        pass

    def test_operations_get_delegations(self):
        """Test case for operations_get_delegations

        Get delegations  # noqa: E501
        """
        pass

    def test_operations_get_delegations_count(self):
        """Test case for operations_get_delegations_count

        Get delegations count  # noqa: E501
        """
        pass

    def test_operations_get_double_baking(self):
        """Test case for operations_get_double_baking

        Get double baking  # noqa: E501
        """
        pass

    def test_operations_get_double_baking_by_hash(self):
        """Test case for operations_get_double_baking_by_hash

        Get double baking by hash  # noqa: E501
        """
        pass

    def test_operations_get_double_baking_count(self):
        """Test case for operations_get_double_baking_count

        Get double baking count  # noqa: E501
        """
        pass

    def test_operations_get_double_endorsing(self):
        """Test case for operations_get_double_endorsing

        Get double endorsing  # noqa: E501
        """
        pass

    def test_operations_get_double_endorsing_by_hash(self):
        """Test case for operations_get_double_endorsing_by_hash

        Get double endorsing by hash  # noqa: E501
        """
        pass

    def test_operations_get_double_endorsing_count(self):
        """Test case for operations_get_double_endorsing_count

        Get double endorsing count  # noqa: E501
        """
        pass

    def test_operations_get_double_preendorsing(self):
        """Test case for operations_get_double_preendorsing

        Get double preendorsing  # noqa: E501
        """
        pass

    def test_operations_get_double_preendorsing_by_hash(self):
        """Test case for operations_get_double_preendorsing_by_hash

        Get double preendorsing by hash  # noqa: E501
        """
        pass

    def test_operations_get_double_preendorsing_count(self):
        """Test case for operations_get_double_preendorsing_count

        Get double preendorsing count  # noqa: E501
        """
        pass

    def test_operations_get_endorsement_by_hash(self):
        """Test case for operations_get_endorsement_by_hash

        Get endorsement by hash  # noqa: E501
        """
        pass

    def test_operations_get_endorsements(self):
        """Test case for operations_get_endorsements

        Get endorsements  # noqa: E501
        """
        pass

    def test_operations_get_endorsements_count(self):
        """Test case for operations_get_endorsements_count

        Get endorsements count  # noqa: E501
        """
        pass

    def test_operations_get_endorsing_reward_by_id(self):
        """Test case for operations_get_endorsing_reward_by_id

        Get endorsing reward by id  # noqa: E501
        """
        pass

    def test_operations_get_endorsing_rewards(self):
        """Test case for operations_get_endorsing_rewards

        Get endorsing rewards  # noqa: E501
        """
        pass

    def test_operations_get_endorsing_rewards_count(self):
        """Test case for operations_get_endorsing_rewards_count

        Get endorsing rewards count  # noqa: E501
        """
        pass

    def test_operations_get_migration_by_id(self):
        """Test case for operations_get_migration_by_id

        Get migration by id  # noqa: E501
        """
        pass

    def test_operations_get_migrations(self):
        """Test case for operations_get_migrations

        Get migrations  # noqa: E501
        """
        pass

    def test_operations_get_migrations_count(self):
        """Test case for operations_get_migrations_count

        Get migrations count  # noqa: E501
        """
        pass

    def test_operations_get_nonce_revelation_by_hash(self):
        """Test case for operations_get_nonce_revelation_by_hash

        Get nonce revelation by hash  # noqa: E501
        """
        pass

    def test_operations_get_nonce_revelations(self):
        """Test case for operations_get_nonce_revelations

        Get nonce revelations  # noqa: E501
        """
        pass

    def test_operations_get_nonce_revelations_count(self):
        """Test case for operations_get_nonce_revelations_count

        Get nonce revelations count  # noqa: E501
        """
        pass

    def test_operations_get_origination_by_hash(self):
        """Test case for operations_get_origination_by_hash

        Get origination by hash  # noqa: E501
        """
        pass

    def test_operations_get_originations(self):
        """Test case for operations_get_originations

        Get originations  # noqa: E501
        """
        pass

    def test_operations_get_originations_count(self):
        """Test case for operations_get_originations_count

        Get originations count  # noqa: E501
        """
        pass

    def test_operations_get_preendorsement_by_hash(self):
        """Test case for operations_get_preendorsement_by_hash

        Get preendorsement by hash  # noqa: E501
        """
        pass

    def test_operations_get_preendorsements(self):
        """Test case for operations_get_preendorsements

        Get preendorsements  # noqa: E501
        """
        pass

    def test_operations_get_preendorsements_count(self):
        """Test case for operations_get_preendorsements_count

        Get preendorsements count  # noqa: E501
        """
        pass

    def test_operations_get_proposal_by_hash(self):
        """Test case for operations_get_proposal_by_hash

        Get proposal by hash  # noqa: E501
        """
        pass

    def test_operations_get_proposals(self):
        """Test case for operations_get_proposals

        Get proposals  # noqa: E501
        """
        pass

    def test_operations_get_proposals_count(self):
        """Test case for operations_get_proposals_count

        Get proposals count  # noqa: E501
        """
        pass

    def test_operations_get_register_constant_by_hash(self):
        """Test case for operations_get_register_constant_by_hash

        Get register constant by hash  # noqa: E501
        """
        pass

    def test_operations_get_register_constants(self):
        """Test case for operations_get_register_constants

        Get register constants  # noqa: E501
        """
        pass

    def test_operations_get_register_constants_count(self):
        """Test case for operations_get_register_constants_count

        Get register constants count  # noqa: E501
        """
        pass

    def test_operations_get_reveal_by_hash(self):
        """Test case for operations_get_reveal_by_hash

        Get reveal by hash  # noqa: E501
        """
        pass

    def test_operations_get_reveals(self):
        """Test case for operations_get_reveals

        Get reveals  # noqa: E501
        """
        pass

    def test_operations_get_reveals_count(self):
        """Test case for operations_get_reveals_count

        Get reveals count  # noqa: E501
        """
        pass

    def test_operations_get_revelation_penalties(self):
        """Test case for operations_get_revelation_penalties

        Get revelation penalties  # noqa: E501
        """
        pass

    def test_operations_get_revelation_penalties_count(self):
        """Test case for operations_get_revelation_penalties_count

        Get revelation penalties count  # noqa: E501
        """
        pass

    def test_operations_get_revelation_penalty_by_id(self):
        """Test case for operations_get_revelation_penalty_by_id

        Get revelation penalty by id  # noqa: E501
        """
        pass

    def test_operations_get_set_deposits_limit_by_hash(self):
        """Test case for operations_get_set_deposits_limit_by_hash

        Get set deposits limit by hash  # noqa: E501
        """
        pass

    def test_operations_get_set_deposits_limits(self):
        """Test case for operations_get_set_deposits_limits

        Get set deposits limits  # noqa: E501
        """
        pass

    def test_operations_get_set_deposits_limits_count(self):
        """Test case for operations_get_set_deposits_limits_count

        Get set deposits limits count  # noqa: E501
        """
        pass

    def test_operations_get_transaction_by_hash(self):
        """Test case for operations_get_transaction_by_hash

        Get transaction by hash  # noqa: E501
        """
        pass

    def test_operations_get_transaction_by_hash_counter(self):
        """Test case for operations_get_transaction_by_hash_counter

        Get transaction by hash and counter  # noqa: E501
        """
        pass

    def test_operations_get_transaction_by_hash_counter_nonce(self):
        """Test case for operations_get_transaction_by_hash_counter_nonce

        Get transaction by hash, counter and nonce  # noqa: E501
        """
        pass

    def test_operations_get_transactions(self):
        """Test case for operations_get_transactions

        Get transactions  # noqa: E501
        """
        pass

    def test_operations_get_transactions_count(self):
        """Test case for operations_get_transactions_count

        Get transactions count  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
