# coding: utf-8

"""
    TzKT API

    # Introduction  TzKT Explorer provides free REST API and WebSocket API for accessing detailed Tezos blockchain data and helps developers build more services and applications on top of Tezos. TzKT is an open-source project, so you can easily clone and build it and use it as a self-hosted service to avoid any risks of depending on third-party services.  TzKT API is available for the following Tezos networks with the following base URLs:  - Mainnet: `https://api.tzkt.io/` or `https://api.mainnet.tzkt.io/` ([view docs](https://api.tzkt.io))  - Hangzhounet: `https://api.hangzhounet.tzkt.io/` ([view docs](https://api.hangzhounet.tzkt.io)) - Ithacanet: `https://api.ithacanet.tzkt.io/` ([view docs](https://api.ithacanet.tzkt.io))  We also provide a staging environment for testing newest features and pre-updating client applications before deploying to production:  - Mainnet staging: `https://staging.api.tzkt.io/` or `https://staging.api.mainnet.tzkt.io/` ([view docs](https://staging.api.tzkt.io))  Feel free to contact us if you have any questions or feature requests. Your feedback really helps us make TzKT better!  - Discord: https://discord.gg/aG8XKuwsQd - Telegram: https://t.me/baking_bad_chat - Slack: https://tezos-dev.slack.com/archives/CV5NX7F2L - Twitter: https://twitter.com/TezosBakingBad - Email: hello@baking-bad.org  And don't forget to star TzKT project [on GitHub](https://github.com/baking-bad/tzkt) ;)  # Terms of Use  TzKT API is free for everyone and for both commercial and non-commercial usage.  If your application or service uses the TzKT API in any forms: directly on frontend or indirectly on backend, you must mention that fact on your website or application by placing the label **\"Powered by TzKT API\"** or **\"Built with TzKT API\"** with a direct link to [tzkt.io](https://tzkt.io).   # Rate Limits  There will be no rate limits as long as our servers can handle the load without additional infrastructure costs. However, any apparent abuse will be prevented by setting targeted rate limits.  Check out [Tezos Explorer API Best Practices](https://baking-bad.org/blog/tag/TzKT/) and in particular [how to optimize requests count](https://baking-bad.org/blog/2020/07/29/tezos-explorer-api-tzkt-how-often-to-make-requests/).  ---   # noqa: E501

    OpenAPI spec version: v1.8.3
    Contact: hello@baking-bad.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.tzktpy.contracts_api import ContractsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestContractsApi(unittest.TestCase):
    """ContractsApi unit test stubs"""

    def setUp(self):
        self.api = ContractsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_contracts_build_entrypoint_parameters_get(self):
        """Test case for contracts_build_entrypoint_parameters_get

        Build entrypoint parameters  # noqa: E501
        """
        pass

    def test_contracts_build_entrypoint_parameters_post(self):
        """Test case for contracts_build_entrypoint_parameters_post

        Build entrypoint parameters  # noqa: E501
        """
        pass

    def test_contracts_get(self):
        """Test case for contracts_get

        Get contracts  # noqa: E501
        """
        pass

    def test_contracts_get_big_map_by_name(self):
        """Test case for contracts_get_big_map_by_name

        Get bigmap by name  # noqa: E501
        """
        pass

    def test_contracts_get_big_map_by_name_keys(self):
        """Test case for contracts_get_big_map_by_name_keys

        Get bigmap keys  # noqa: E501
        """
        pass

    def test_contracts_get_big_maps(self):
        """Test case for contracts_get_big_maps

        Get contract bigmaps  # noqa: E501
        """
        pass

    def test_contracts_get_by_address(self):
        """Test case for contracts_get_by_address

        Get contract by address  # noqa: E501
        """
        pass

    def test_contracts_get_code(self):
        """Test case for contracts_get_code

        Get contract code  # noqa: E501
        """
        pass

    def test_contracts_get_contract_view_by_name(self):
        """Test case for contracts_get_contract_view_by_name

        Get view by name  # noqa: E501
        """
        pass

    def test_contracts_get_contract_views(self):
        """Test case for contracts_get_contract_views

        Get contract views  # noqa: E501
        """
        pass

    def test_contracts_get_count(self):
        """Test case for contracts_get_count

        Get contracts count  # noqa: E501
        """
        pass

    def test_contracts_get_entrypoint_by_name(self):
        """Test case for contracts_get_entrypoint_by_name

        Get entrypoint by name  # noqa: E501
        """
        pass

    def test_contracts_get_entrypoints(self):
        """Test case for contracts_get_entrypoints

        Get contract entrypoints  # noqa: E501
        """
        pass

    def test_contracts_get_historical_keys(self):
        """Test case for contracts_get_historical_keys

        Get historical keys  # noqa: E501
        """
        pass

    def test_contracts_get_interface(self):
        """Test case for contracts_get_interface

        Get JSON Schema [2020-12] interface for the contract  # noqa: E501
        """
        pass

    def test_contracts_get_key(self):
        """Test case for contracts_get_key

        Get bigmap key  # noqa: E501
        """
        pass

    def test_contracts_get_key2(self):
        """Test case for contracts_get_key2

        Get historical key  # noqa: E501
        """
        pass

    def test_contracts_get_key_updates(self):
        """Test case for contracts_get_key_updates

        Get bigmap key updates  # noqa: E501
        """
        pass

    def test_contracts_get_raw_storage(self):
        """Test case for contracts_get_raw_storage

        Get raw contract storage  # noqa: E501
        """
        pass

    def test_contracts_get_raw_storage_history(self):
        """Test case for contracts_get_raw_storage_history

        Get raw contract storage history  # noqa: E501
        """
        pass

    def test_contracts_get_raw_storage_schema(self):
        """Test case for contracts_get_raw_storage_schema

        Get raw contract storage schema  # noqa: E501
        """
        pass

    def test_contracts_get_same(self):
        """Test case for contracts_get_same

        Get same contracts  # noqa: E501
        """
        pass

    def test_contracts_get_similar(self):
        """Test case for contracts_get_similar

        Get similar contracts  # noqa: E501
        """
        pass

    def test_contracts_get_storage(self):
        """Test case for contracts_get_storage

        Get contract storage  # noqa: E501
        """
        pass

    def test_contracts_get_storage_history(self):
        """Test case for contracts_get_storage_history

        Get contract storage history  # noqa: E501
        """
        pass

    def test_contracts_get_storage_schema(self):
        """Test case for contracts_get_storage_schema

        Get contract storage schema  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
